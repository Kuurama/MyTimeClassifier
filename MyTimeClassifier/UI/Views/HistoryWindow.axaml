<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:MyTimeClassifier.UI.ViewModels"
        xmlns:avalonia="https://github.com/projektanker/icons.avalonia"
        xmlns:configuration="clr-namespace:MyTimeClassifier.Configuration"
        xmlns:entities="clr-namespace:MyTimeClassifier.Database.Entities"
        xmlns:models="clr-namespace:MyTimeClassifier.UI.Models"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        mc:Ignorable="d"
        x:Class="MyTimeClassifier.UI.Views.HistoryWindow"
        x:DataType="viewModels:HistoryWindowViewModel"
        Title="HistoryWindow"
        SizeToContent="WidthAndHeight"
        CanResize="False"
        WindowStartupLocation="CenterScreen"
        SystemDecorations="None"
        Background="Transparent"
        TransparencyBackgroundFallback="Transparent">

    <Design.DataContext>
        <viewModels:HistoryWindowViewModel />
    </Design.DataContext>

    <Border BorderBrush="{DynamicResource MainBorder}" BorderThickness="4" CornerRadius="20" ClipToBounds="True">
        <!-- It is necessary to have another border to prevent clipping -->
        <Border CornerRadius="16" ClipToBounds="True">
            <Grid RowDefinitions="*,Auto" Background="{DynamicResource MainLight}">
                <Grid Row="0" Name="Header" ColumnDefinitions="*,*,*" Background="{DynamicResource MainHeavy}">
                    <TextBlock Grid.Column="0" Text="History"
                               HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0"
                               FontWeight="ExtraBold" FontSize="20" Foreground="{DynamicResource TextColor}" />
                    <Button Grid.Column="2" Background="Transparent" HorizontalAlignment="Right" Click="OnCloseButton" avalonia:Attached.Icon="fa-solid fa-xmark" FontSize="26" Foreground="{DynamicResource TextColor}" />
                </Grid>

                <Grid Name="Body" RowDefinitions="Auto,Auto,Auto,Auto" Row="1" Margin="10" MinWidth="625" Background="{DynamicResource MainLight}">
                    <StackPanel Grid.Row="0" Orientation="Horizontal">
                        <TextBlock Text="Start Time" FontWeight="Bold" Margin="50,0,0,0" HorizontalAlignment="Left" />
                        <TextBlock Text="End Time" FontWeight="Bold" Margin="95,0,0,0" HorizontalAlignment="Left" />
                        <TextBlock Text="Elapsed Time" FontWeight="Bold" Margin="60,0,0,0" HorizontalAlignment="Left" />
                        <TextBlock Text="Job" FontWeight="Bold" Margin="90,0,0,0" HorizontalAlignment="Left" />
                    </StackPanel>

                    <!-- Separation line -->
                    <Rectangle Grid.Row="1" Height="1" Fill="{DynamicResource MainBorder}" VerticalAlignment="Bottom" Margin="0,5,0,5" />
                    <ListBox Grid.Row="2" Grid.Column="0" ItemsSource="{Binding TaskModels}" Height="{Binding ListBoxHeight}" Background="{DynamicResource MainLight}" Scroll="{Binding ScrollViewer, Mode=OneWayToSource}">
                        <ListBox.Styles>
                            <Style Selector="ListBoxItem:pointerover /template/ ContentPresenter">
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                            <Style Selector="ListBoxItem:selected /template/ ContentPresenter">
                                <Setter Property="Background" Value="{DynamicResource MainMedium}" />
                                <Setter Property="CornerRadius" Value="5" />
                            </Style>
                        </ListBox.Styles>
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="models:TaskModel">
                                <StackPanel Orientation="Horizontal" Spacing="5" Margin="-6,0,0,0">
                                    <Button Width="160" HorizontalAlignment="Center" Content="{Binding StartDate}" Click="OnContextMenuButtonPressed">
                                        <Button.ContextMenu>
                                            <ContextMenu Placement="Right">
                                                <MenuItem Header="Date">
                                                    <CalendarDatePicker DisplayDateEnd="{Binding Source={x:Static system:DateTime.Now}, Path=Date}" SelectedDate="{Binding StartDate, Mode=TwoWay}" />
                                                </MenuItem>
                                                <MenuItem Header="Time">
                                                    <TimePicker SelectedTime="{Binding StartTime, Mode=TwoWay}" />
                                                </MenuItem>
                                            </ContextMenu>
                                        </Button.ContextMenu>
                                    </Button>
                                    <Button Width="160" Content="{Binding EndDate}" Click="OnContextMenuButtonPressed">
                                        <Button.ContextMenu>
                                            <ContextMenu Placement="Right">
                                                <MenuItem Header="Date">
                                                    <CalendarDatePicker DisplayDateEnd="{Binding Source={x:Static system:DateTime.Now}, Path=Date}" SelectedDate="{Binding EndDate, Mode=TwoWay}" >
                                                    </CalendarDatePicker>
                                                </MenuItem>
                                                <MenuItem Header="Time" >
                                                    <TimePicker SelectedTime="{Binding EndTime, Mode=TwoWay}"  />
                                                </MenuItem>
                                            </ContextMenu>
                                        </Button.ContextMenu>
                                    </Button>
                                    <TextBlock Text="{Binding ElapsedTime}" VerticalAlignment="Center" FontWeight="Bold" Width="100" Margin="20, 0, 0, 0" />
                                    <ComboBox ItemsSource="{Binding Source={x:Static configuration:AppConfiguration.StaticCache}, Path=Jobs}" SelectedItem="{Binding Job}" Width="160">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate DataType="entities:Job">
                                                <TextBlock Text="{Binding NormalizedText}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                    <StackPanel Orientation="Horizontal" Margin="5,0,0,0">
                                        <Button Name="DeleteButton" avalonia:Attached.Icon="fa-solid fa-trash" Foreground="#ec5a72" Click="DeleteButton_Click" />
                                        <StackPanel Name="ConfirmDeletePanel" Orientation="Horizontal" IsVisible="False" Spacing="5">
                                            <TextBlock Text="Are you sure?" VerticalAlignment="Center" />
                                            <Button Name="YesButton" Content="Yes" Foreground="#ec5a72" Command="{Binding OnDeleteCommand}" Click="ConfirmDeleteButton_Click" />
                                            <Button Name="NoButton" Content="No" Foreground="#30a96e" VerticalAlignment="Center" Click="CloseDeleteMenuButton_Click" />
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Grid>
        </Border>
    </Border>
</Window>
